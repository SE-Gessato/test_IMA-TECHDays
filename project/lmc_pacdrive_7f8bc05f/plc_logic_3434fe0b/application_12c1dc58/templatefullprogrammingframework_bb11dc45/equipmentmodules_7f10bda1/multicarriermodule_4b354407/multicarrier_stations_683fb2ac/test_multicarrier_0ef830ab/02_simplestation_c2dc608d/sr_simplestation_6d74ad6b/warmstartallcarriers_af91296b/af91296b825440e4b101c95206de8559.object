{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)af91296b-8254-40e4-b101-c95206de8559","ParentGuid":"(Guid)6d74ad6b-2de0-4d3d-9107-bd4e5355c3e2","Name":"(string)WarmStartAllCarriers","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)8ac092e5-3128-4e26-9e7e-11016c6684f2","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"8ac092e5","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)CASE iStateWarmstart OF\n\n0:\t//--- check first if all carriers have an station ID\n\t\tFOR udiLoop := 1 TO i_ifMultiCarrier.ifFeedback.ifFeedbackConfiguration.udiNumberOfCarriers DO\n\t\t\tIF i_ifMultiCarrier.raifCarrier[udiLoop].ifFeedback.udiStationId = 0 THEN\n\t\t\t\txError \t\t:= TRUE;\n\t\t\t\tsResultMsg \t:= Concat('Carrier ',TO_STRING(udiLoop));\n\t\t\t\tsResultMsg \t:= Concat(sResultMsg,' Station Id = 0');\n\t\t\t\tsEtResult \t:= TO_STRING(ET_ResultStation.WarmstartNotPossible);\n\t\t\t\tEXIT;\n\t\t\tEND_IF\n\t\tEND_FOR\n\n\t\n\t//--- Move all carriers with warmstart velocity into station\n\t\t\tAddMessageToAPL('------- SR_SimpleStation: Warmstart ------- ');\n\t//\n\t//--- detect carriers: start from station1\n\t\tIF NOT xError THEN\t\n\t\t\tMCR.FC_OrderOfCarriersToTargetPosition(\n\t\t\t\t\ti_xInForwardDirection\t\t:= TRUE,\n\t\t\t\t\ti_lrTargetPosition\t\t\t:= lrWaitPositionLoad, \n\t\t\t\t\ti_ifMulticarrier\t\t\t:= i_ifMulticarrier, \n\t\t\t\t\tq_audiOrderOfCarriers\t\t=> audiOrderOfCarrier,\n\t\t\t\t\tq_udiNumberOfCarriersFound\t=> udiNumberOfCarrier,\n\t\t\t\t\tq_xError\t\t\t\t\t=> xError,\n\t\t\t\t\tq_etResult\t\t\t\t\t=> etResultMCR,\n\t\t\t\t\tq_sResultMsg\t\t\t\t=> sResultMsg);\t\n\t\tEND_IF\n\t\t\t\t\n\t//--- Start warmstart movement-------\n\t\tIF NOT xError THEN\t\n\t\t\tFOR udiLoop := 1 TO udiNumberOfCarrier  DO\n\t\t\t\t\n\t\t\t\t//--- Save old motion parameter\n\t\t\t\t\tastCarrierData[audiOrderOfCarrier[udiLoop]].lrVelocity \t\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrMaxVelocity;\n\t\t\t\t\tastCarrierData[audiOrderOfCarrier[udiLoop]].lrAcceleration \t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrMaxAcceleration;\n\t\t\t\t\tastCarrierData[audiOrderOfCarrier[udiLoop]].lrDeceleration \t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrMaxDeceleration;\n\t\t\t\t\tastCarrierData[audiOrderOfCarrier[udiLoop]].lrJerk \t\t\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrMaxAbsJerk;\n\t\t\t\t\t\t\n\t\t\t\t\tIF NOT xError THEN\t\n\t\t\t\t\t\t//--- motion parameter for warmstart movements\n\t\t\t\t\t\ti_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifMotion.SetMotionParameter(\n\t\t\t\t\t\t\t\t\t\ti_lrMaxVelocity\t\t:= 100.0,  \n\t\t\t\t\t\t\t\t\t\ti_lrMaxAcceleration\t:= 1_000.0,\n\t\t\t\t\t\t\t\t\t\ti_lrMaxDeceleration\t:= 1_000.0,\n\t\t\t\t\t\t\t\t\t\ti_lrMaxAbsJerk\t\t:= 10_000.0,\n\t\t\t\t\t\t\t\t\t\tq_xError\t\t\t=> xError,\n\t\t\t\t\t\t\t\t\t\tq_etResult\t\t\t=> etResultMCR,\n\t\t\t\t\t\t\t\t\t\tq_sResultMsg\t\t=> sResultMsg);\t\n\t\t\t\t\tEND_IF\n\t\t\t\t\t\n\t\t\t\t\tIF NOT xError THEN\t\n\t\t\t\t\t\t//--- send carriers onto their last targets\n\t\t\t\t\t\ti_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifMotion.ifMoveGapControl.Start(\t\n\t\t\t\t\t\t\t\t\t\ti_lrTarget\t\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrEndTargetPosition,\n\t\t\t\t\t\t\t\t\t\ti_lrTargetGap\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrTargetGap,\n\t\t\t\t\t\t\t\t\t\ti_etPosMode\t\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.etPosMode,\n\t\t\t\t\t\t\t\t\t\tq_xError\t\t=> xError,\n\t\t\t\t\t\t\t\t\t\tq_etResult\t\t=> etResultMCR,\n\t\t\t\t\t\t\t\t\t\tq_sResultMsg\t=> sResultMsg);\t\n\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\n\t\t\t\tIF xError THEN\t\n\t\t\t\t\tEXIT;\t\n\t\t\t\tEND_IF\n\t\t\tEND_FOR\t\t\n\t\tEND_IF\n\t\t\n\t\tIF NOT xError THEN\t\n\t\t\tiStateWarmstart := 10;\n\t\tEND_IF\n\t\n10://---Load stored motion parameter, by calling again the move command when the carriers in their target  ----\n\t\tIF NOT i_ifMulticarrier.ifFeedback.xMotionActiveAnyCarrier  \n\t\tTHEN\n\t\t\t\tFOR udiLoop := 1 TO udiNumberOfCarrier  DO\n\t\t\t\t\t\tIF NOT xError THEN\t\n\t\t\t\t\t\t\ti_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifMotion.SetMotionParameter(\n\t\t\t\t\t\t\t\t\t\t\ti_lrMaxVelocity\t\t:= astCarrierData[audiOrderOfCarrier[udiLoop]].lrVelocity, \t\t   \n\t\t\t\t\t\t\t\t\t\t\ti_lrMaxAcceleration\t:= astCarrierData[audiOrderOfCarrier[udiLoop]].lrAcceleration, \t\n\t\t\t\t\t\t\t\t\t\t\ti_lrMaxDeceleration\t:= astCarrierData[audiOrderOfCarrier[udiLoop]].lrDeceleration, \t\n\t\t\t\t\t\t\t\t\t\t\ti_lrMaxAbsJerk\t\t:= astCarrierData[audiOrderOfCarrier[udiLoop]].lrJerk, \t\t\t      \n\t\t\t\t\t\t\t\t\t\t\tq_xError\t\t\t=> xError,\n\t\t\t\t\t\t\t\t\t\t\tq_etResult\t\t\t=> etResultMCR,\n\t\t\t\t\t\t\t\t\t\t\tq_sResultMsg\t\t=> sResultMsg);\t\n\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\tIF NOT xError THEN\t\n\t\t\t\t\t\t\t\ti_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifMotion.ifMoveGapControl.Start(\t\n\t\t\t\t\t\t\t\t\t\t\t\ti_lrTarget\t\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrEndTargetPosition,\n\t\t\t\t\t\t\t\t\t\t\t\ti_lrTargetGap\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.lrTargetGap,\n\t\t\t\t\t\t\t\t\t\t\t\ti_etPosMode\t\t:= i_ifMulticarrier.raifCarrier[audiOrderOfCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.ifFeedbackMoveGapControlParameter.etPosMode,\n\t\t\t\t\t\t\t\t\t\t\t\tq_xError\t\t=> xError,\n\t\t\t\t\t\t\t\t\t\t\t\tq_etResult\t\t=> etResultMCR,\n\t\t\t\t\t\t\t\t\t\t\t\tq_sResultMsg\t=> sResultMsg);\t\n\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\tIF xError THEN\t\n\t\t\t\t\t\t\tEXIT;\t\n\t\t\t\t\t\tEND_IF\n\t\t\t\tEND_FOR\n\t\t\t\t\n\t\t\tIF NOT xError THEN\t\n\t\t\t\tiStateWarmstart \t\t:= 0;\n\t\t\t\txMoveAllCarriersInFirstStationIsDone \t\t:= TRUE;\t\n\t\t\tEND_IF\n\t\tEND_IF\n\nEND_CASE","LineInfoPersistence":"(string)af91296b-8254-40e4-b101-c95206de8559_Impl_LineIds"}}}},"UniqueIdGenerator":"(string)256"}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","8ac092e5":"{8ac092e5-3128-4e26-9e7e-11016c6684f2}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}