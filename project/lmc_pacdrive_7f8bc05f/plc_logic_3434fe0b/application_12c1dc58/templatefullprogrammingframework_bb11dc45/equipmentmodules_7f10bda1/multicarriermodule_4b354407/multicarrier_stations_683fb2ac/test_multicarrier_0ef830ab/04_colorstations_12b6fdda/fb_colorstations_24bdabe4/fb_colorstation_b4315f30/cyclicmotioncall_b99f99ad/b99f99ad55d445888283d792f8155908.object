{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)b99f99ad-55d4-4588-8283-d792f8155908","ParentGuid":"(Guid)b4315f30-f812-4728-91fb-d3b56545bd80","Name":"(string)CyclicMotionCall","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)CASE iState OF\n\n//----------------------------------------------------------------------------------------------------------------------------------- \n0: \t//--- Check for StationType\t\n\tIF  THIS^.udiNumberOfCarriersInStationTotal > 0 \n    THEN\n\t\t//--- get carrier -----------------------\t\n\t\tGetStationCarrier(i_udiElementNumber := 1);\n\t\t\t\t\t\t\t\t\t\t\n\t\tIF\tNOT THIS^.xError_loc THEN\n\t\t\tTHIS^.GetUserDataColor(\ti_ifCarrier \t\t:= THIS^.ifCarrier,\n\t\t\t\t\t\t\t\t\tq_ifUserDataColor\t=> THIS^.ifUserDataColorCarrier1);\n\t\t\t\n\t\t\tIF \t\t\t\tTHIS^.ifUserDataColorCarrier1 <> 0 \n\t\t\t\tAND_THEN\tCheckStationTypeIsValid\n\t\t\tTHEN\n\t\t\t\t//--- Check if the product needs the color of this station\n\t\t\t\tIF \t\t(THIS^.etStationType = ET_StationType.Blue \t AND THIS^.ifUserDataColorCarrier1.xNeedBlueColor)\n\t\t\t\t\tOR \t(THIS^.etStationType = ET_StationType.Red \t AND THIS^.ifUserDataColorCarrier1.xNeedRedColor)\n\t\t\t\t\tOR \t(THIS^.etStationType = ET_StationType.Yellow AND THIS^.ifUserDataColorCarrier1.xNeedYellowColor)\n\t\t\t\tTHEN \n\t\t\t\t\t// Move Carrier into Station\n\t\t\t\t\t\tiState\t:= 10;\n\t\t\t\tELSE\n\t\t\t\t\t// Move Carrier immediately to TargetStation\n\t\t\t\t\t\txImmediatelyToTargetStation\t:= TRUE;\n\t\t\t\t\t\tiState\t:= 40;\n\t\t\t\tEND_IF\n\t\t\t\n\t\t\tELSE \n\t\t\t\t// Move Carrier into Station\n\t\t\t\tiState := 10;\n\t\t\tEND_IF\n\t\t\n\t\tEND_IF\n\tEND_IF\n\t\t\t\t\t\t\t\n\n//----------------------------------------------------------------------------------------------------------------------------------- \n10: //--- Move Carrier into Station\t -----------------\t\t\n\t\tAddMessageToAPL('Move Carrier in Station'); \n\t\t\t\n\t\t//--- send MotionParameter  -----------------------\t\n\t\t\t\t// use Parameter of arriving Carrier --> no need for new SetMotionParameter\n\t\t\t\t\t\t\t\t\n\t\t//--- MoveGap -----------------------\t\n\t\t\tMoveGap(\n\t\t\t\ti_lrTargetGap\t\t:= THIS^.lrProcessGap,\n\t\t\t\ti_etPosMode\t\t\t:= MCR.ET_PosMode.AbsoluteForward, \n\t\t\t\ti_lrTarget\t\t\t:= THIS^.lrProcessPosInStation);\n\t\t\t\t\n\t\tIF NOT THIS^.xError THEN\n\t\t\tiState := 20;\n\t\tEND_IF\n\n//----------------------------------------------------------------------------------------------------------------------------------- \n20: //--- Set Ready for next job -----------------\t\n\tIF THIS^.ifCarrier.ifFeedback.ifFeedbackMoveGapControl.xInEndTargetPosition  \n\tTHEN\n\t\tTHIS^.xStationReadyForJob_loc := TRUE; \n\t\t\n\t\t// --- Emulation ---\n\t\tIF \tTHIS^.etStationType = ET_StationType.Red THEN\n\t\t\tGVL_MulticarrierEmulation.G_aetProductColor[THIS^.ifCarrier.udiCarrierIndex] \t:= DTC.ET_EmulationColors.Red;\t\n\t\t\t\n\t\tELSIF THIS^.etStationType = ET_StationType.Blue THEN\n\t\t\tGVL_MulticarrierEmulation.G_aetProductColor[THIS^.ifCarrier.udiCarrierIndex] \t:= DTC.ET_EmulationColors.RoyalBlue;\n\t\t\t\t\n\t\tELSIF THIS^.etStationType = ET_StationType.Yellow THEN\n\t\t\tGVL_MulticarrierEmulation.G_aetProductColor[THIS^.ifCarrier.udiCarrierIndex] \t:= DTC.ET_EmulationColors.Yellow;\t\t\t\t\n\t\tEND_IF\n\t\t\n\t\tiState := 30;\n\tEND_IF\n//----------------------------------------------------------------------------------------------------------------------------------- \n30: //--- Move Carrier Out of Station\n\tIF \tiq_xTrigger\tTHEN\n\t\t\n\t\tiq_xTrigger := FALSE;\n\t\tTHIS^.xStationReadyForJob_loc := FALSE; \n\t\t\n\t\t\tIF THIS^.etStationType = ET_StationType.Unload THEN\n\t\t\t\tTHIS^.ifCarrier.ifConfiguration.xProductPresent := FALSE;\n\t\t\t\t// --- Emulation ---\n\t\t\t\t\n\t\t\t\tGVL_MulticarrierEmulation.G_aetProductColor[THIS^.ifCarrier.udiCarrierIndex]:= DTC.ET_EmulationColors.Transparent;\n\t\t\tEND_IF\n\t\t\t\n\t\t\tAddMessageToAPL('Move Carrier out of Station'); \n\t\t\n\t\t//--- write new MotionParameter  -----------------------\t\n\t\t\tWriteMotionParameter(\n\t\t\t\ti_lrMaxVelocity     := THIS^.lrMaxVelocity,     \n\t\t\t\ti_lrMaxAcceleration := THIS^.lrMaxAcceleration, \n\t\t\t\ti_lrMaxDeceleration := THIS^.lrMaxDeceleration, \n\t\t\t\ti_lrMaxAbsJerk\t\t:= THIS^.lrMaxJerk);      \n  \t\t\t\t\t\t\t\t\n\t\t//--- MoveGap -----------------------\t\n\t\t\tMoveGap(\n\t\t\t\ti_etPosMode\t\t\t:= MCR.ET_PosMode.AbsoluteForward, \n\t\t\t\ti_lrTargetGap\t\t:= THIS^.ifTargetStation.lrHandoverTargetGap,\n\t\t\t\ti_lrTarget\t\t\t:= THIS^.ifTargetStation.lrHandoverTargetPosition);\n\t\t\t\t\t\t\n\t\t//--- handover carrier -----\n\t\t\tHandOverCarriers(i_udiNumberOfCarriers := 1);\n\t\t\t\t\t\n\t\tIF NOT THIS^.xError THEN\n\t\t\tiState := 0;\n\t\tEND_IF\n\t\t\t\n\tEND_IF\n\t\n//----------------------------------------------------------------------------------------------------------------------------------- \n40: //--- Move Carrier immediately to TargetStation\n\tIF xImmediatelyToTargetStation \tTHEN\n\t\txImmediatelyToTargetStation\t:= FALSE;\n\t\tTHIS^.xStationReadyForJob_loc := FALSE; \n\t\t\t\n\t\tAddMessageToAPL('Move Carrier immediatly to TargetStation'); \n\t\t\n\t\t//--- send MotionParameter  -----------------------\t\n\t\t\t// use Parameter of arriving Carrier --> no need for new SetMotionParameter\n\t\t\t\t\t\t\t\t\n\t\t//--- MoveGap -----------------------\t\n\t\t\tMoveGap(\n\t\t\t\ti_lrTargetGap\t\t:= THIS^.ifTargetStation.lrHandoverTargetGap,\n\t\t\t\ti_etPosMode\t\t\t:= MCR.ET_PosMode.AbsoluteForward, \n\t\t\t\ti_lrTarget\t\t\t:= THIS^.ifTargetStation.lrHandoverTargetPosition);\n\t\t\t\t\t\t\n\t\t//--- handover carrier -----\n\t\t\tHandOverCarriers(i_udiNumberOfCarriers := 1);\n\t\t\t\n\t\tIF NOT THIS^.xError THEN\n\t\t\tiState := 0;\n\t\tEND_IF\n\t\t\t\n\tEND_IF\n \n//----------------------------------------------------------------------------------------------------------------------------------- \n\nEND_CASE","LineInfoPersistence":"(string)b99f99ad-55d4-4588-8283-d792f8155908_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD CyclicMotionCall : BOOL\nVAR_IN_OUT\n\tiq_xTrigger : BOOL;\nEND_VAR\n\n","LineInfoPersistence":"(string)b99f99ad-55d4-4588-8283-d792f8155908_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}