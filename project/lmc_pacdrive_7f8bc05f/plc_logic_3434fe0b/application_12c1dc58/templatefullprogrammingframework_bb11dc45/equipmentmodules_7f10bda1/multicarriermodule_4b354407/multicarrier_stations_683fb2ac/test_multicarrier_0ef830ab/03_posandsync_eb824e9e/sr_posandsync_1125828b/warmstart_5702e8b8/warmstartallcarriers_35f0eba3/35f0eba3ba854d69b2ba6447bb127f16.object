{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)35f0eba3-ba85-4d69-b2ba-6447bb127f16","ParentGuid":"(Guid)1125828b-e591-4529-ade6-5e855ba6ecb2","Name":"(string)WarmStartAllCarriers","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)5702e8b8-8610-4187-bb40-80ef746f3ace"}]}}}}]},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)CASE iStateWarmstart OF\n\n0:\t//--- check first if all carriers have an station ID\n\t\txMoveWarmStartIsDone := FALSE;\n\t\t\n\t\tIF NOT xError THEN\t\n\t\t\tFOR udiLoop := 1 TO i_ifMultiCarrier.ifFeedback.ifFeedbackConfiguration.udiNumberOfCarriers DO\n\t\t\t\tIF i_ifMultiCarrier.raifCarrier[udiLoop].ifFeedback.udiStationId = 0 THEN\n\t\t\t\t\txError \t\t:= TRUE;\n\t\t\t\t\tsResultMsg \t:= Concat('Carrier ',TO_STRING(udiLoop));\n\t\t\t\t\tsResultMsg \t:= Concat(sResultMsg,' Station Id = 0');\n\t\t\t\t\tsEtResult \t:= TO_STRING(ET_ResultStation.WarmstartNotPossible);\n\t\t\t\t\tRETURN;\n\t\t\t\tEND_IF\n\t\t\tEND_FOR\n\t\tEND_IF\n\t\t\t\n\t\tAddMessageToAPL('------- SR_PosAndSync: Do Warmstart ------- ');\n\t\tiStateWarmstart := 10;\n\n10: //--- check if carriers out of station and move them backward inside station\n\t\tMoveCarriersBackInStation(i_lrProcessPos:= 500.0,  i_udiStationId:= 1, q_xAllCarrierInStation=> xAllCarrierInStation1, q_uidCheckCarrerIdForInEndtarget=> CheckCarrerIdStation1ForInEndtarget);\t\t\n\t\tMoveCarriersBackInStation(i_lrProcessPos:= 1400.0, i_udiStationId:= 2, q_xAllCarrierInStation=> xAllCarrierInStation2, q_uidCheckCarrerIdForInEndtarget=> CheckCarrerIdStation2ForInEndtarget);\t\t\n\t\tMoveCarriersBackInStation(i_lrProcessPos:= 2200.0, i_udiStationId:= 3, q_xAllCarrierInStation=> xAllCarrierInStation3, q_uidCheckCarrerIdForInEndtarget=> CheckCarrerIdStation3ForInEndtarget);\t\t\n\t\tMoveCarriersBackInStation(i_lrProcessPos:= 3400.0, i_udiStationId:= 4, q_xAllCarrierInStation=> xAllCarrierInStation4, q_uidCheckCarrerIdForInEndtarget=> CheckCarrerIdStation4ForInEndtarget);\t\t\n\t\tiStateWarmstart := 20;\n\n20:\t//--- wait for all jobs and movements are done\n\t\tIF NOT i_ifMulticarrier.ifFeedback.xMotionActiveAnyCarrier AND NOT i_ifMulticarrier.ifFeedback.xJobActiveAnyCarrier THEN\n\t\t\tiStateWarmstart := 30;\n\t\tEND_IF\n\n30:  //--- check if all carriers inside or behind of their station process pos\n\tIF CheckIfAllCarriersInTheirStation() THEN\t \n\t\tiStateWarmstart := 40;\n\tEND_IF\n\t\t\n\t\t\n40: //---restart first the carriers with movesync  ----\n\t\tIF udiNoOfMoveSyncCarrier > 0 THEN\n\t\t\t//-- get correct sync position and move the carrier to it\n\t\t\tFOR udiLoop := 1 TO udiNoOfMoveSyncCarrier DO\n\t\t\t\tMoveSyncCarrierToCorrectSyncPos(i_udiCarrierId := audiMoveSyncCarrier[udiLoop]);\n\t\t\t\tIF xError THEN\t\n\t\t\t\t\tEXIT;\t\n\t\t\t\tEND_IF\n\t\t\tEND_FOR\n\t\t\t\n\t\t\tIF NOT xError THEN\t\n\t\t\t\tiStateWarmstart := 50;\n\t\t\tEND_IF\n\t\tELSE //-- no carrier with movesync command\n\t\t\tiStateWarmstart := 60;\n\t\tEND_IF\n\t\t\n50://--- wait for all jobs and movements are done\n\t\tIF NOT i_ifMulticarrier.ifFeedback.xMotionActiveAnyCarrier AND NOT i_ifMulticarrier.ifFeedback.xJobActiveAnyCarrier THEN\n\t\t\tiStateWarmstart := 60;\n\t\tEND_IF\n\t\t\n60://--- check if all sync carriers could move to their sync pos\n\t\tFOR udiLoop := 1 TO udiNoOfMoveSyncCarrier DO\n\t\t\tIF NOT i_ifMultiCarrier.raifCarrier[audiMoveSyncCarrier[udiLoop]].ifFeedback.ifFeedbackMoveGapControl.xInEndTargetPosition THEN\n\t\t\t\txError \t\t:= TRUE;\n\t\t\t\tsResultMsg \t:= Concat('Carrier ',TO_STRING(audiMoveSyncCarrier[udiLoop]));\n\t\t\t\tsResultMsg \t:= Concat(sResultMsg,' can not move to its sync position');\n\t\t\t\tsEtResult \t:= TO_STRING(ET_ResultStation.WarmstartNotPossible);\n\t\t\t\tRETURN;\n\t\t\tEND_IF\n\t\tEND_FOR\n\t\t\n\t\tiStateWarmstart := 70;\n\t\t\n70://--- restart to sync the carriers after moving to their syncpos\n\t\tFOR udiLoop := 1 TO udiNoOfMoveSyncCarrier DO\n\t\t\tReStartSyncToCarrierInFront(i_udiCarrierId := audiMoveSyncCarrier[udiLoop]);\n\t\t\tIF xError THEN\t\n\t\t\t\tEXIT;\t\n\t\t\tEND_IF\n\t\tEND_FOR\n\t\t\n\t\tIF NOT xError THEN\t\n\t\t\tiStateWarmstart := 80;\n\t\tEND_IF\n\t\t\n80://--- move carriers in their stations  ----\n\t\tFOR udiLoop := 1 TO udiNoOfMoveGapCarrier DO\n\t\t\tWarmstartMovementMoveGap(i_udiCarrierId := audiMoveGapCarrier[udiLoop]);\n\t\t\tIF xError THEN\t\n\t\t\t\tEXIT;\t\n\t\t\tEND_IF\n\t\tEND_FOR\n\t\t\n\t\tIF NOT xError THEN\t\n\t\t\tiStateWarmstart := 90;\n\t\tEND_IF\n\t\n90://---Load stored motion parameter, by calling again the move command when the carriers in their target  ----\n\t\tIF NOT i_ifMulticarrier.ifFeedback.xMotionActiveAnyCarrier  \n\t\tTHEN\n\t\t\tFOR udiLoop := 1 TO udiNoOfMoveGapCarrier DO\n\t\t\t\tReloadMotionParameterMoveGap(i_udiCarrierId := audiMoveGapCarrier[udiLoop]);\n\t\t\t\tIF xError THEN\t\n\t\t\t\t\tEXIT;\t\n\t\t\t\tEND_IF\n\t\t\tEND_FOR\n\t\t\t\t\n\t\t\tIF NOT xError THEN\t\n\t\t\t\tiStateWarmstart := 100;\n\t\t\tEND_IF\n\t\tEND_IF\n\t\t\n100://---Load stored motion parameter, by calling again the move command when the carriers in their target  ----\n\t\tIF NOT i_ifMulticarrier.ifFeedback.xMotionActiveAnyCarrier  \n\t\tTHEN\n\t\t\t\tiStateWarmstart\t\t\t:= 0;\n\t\t\t\txMoveWarmStartIsDone \t:= TRUE;\t\n\t\t\t\tAddMessageToAPL('------- SR_PosAndSync: Warmstart done ------- ');\n\t\tEND_IF\n\nEND_CASE","LineInfoPersistence":"(string)35f0eba3-ba85-4d69-b2ba-6447bb127f16_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD WarmStartAllCarriers\nVAR_INPUT\nEND_VAR\n\n","LineInfoPersistence":"(string)35f0eba3-ba85-4d69-b2ba-6447bb127f16_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}