{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)78dcf48d-0499-4891-a085-c9cbc329958e","ParentGuid":"(Guid)a8736412-820a-458d-a88c-f60de058aebb","Name":"(string)SearchCurrentModule","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)8ac092e5-3128-4e26-9e7e-11016c6684f2","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"8ac092e5","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)(* Locate the current module according to the information in audiHierarchy *)\nudiCurrentLevel3Size := 0;\npstCurrentFirstLevel3Module := 0;\npstCurrentParent := 0;\ndwCurrentAddInterface := 0;\npstCurrent := ADR(SR_MainMachine.stMachineInterface); (* here we have to start at SR_MainMachine.stMachineInterface\ninstead of our local copy because otherwise it would not be possible to send commands to the MainMachine using the Vis. *)\nFOR udiTmp := 2 TO udiCurrentLevel DO\n\t(* Only navigate to existing modules *)\n\tIF(pstCurrent^.iq_stExt.udiNumberOfSubModules + pstCurrent^.iq_stExt.udiNumberOfControlModules < audiHierarchy[udiTmp]) THEN\n\t\taudiHierarchy[udiTmp] := pstCurrent^.iq_stExt.udiNumberOfSubModules + pstCurrent^.iq_stExt.udiNumberOfControlModules;\n\tEND_IF\n\tIF(audiHierarchy[udiTmp] <= 0) THEN\n\t\taudiHierarchy[udiTmp] := 1;\n\tEND_IF\n\tIF(pstCurrent^.iq_stExt.udiNumberOfSubModules = 0 AND pstCurrent^.iq_stExt.udiNumberOfControlModules = 0) THEN\n\t\t(* Stop, the hierarchy was invalid *)\n\t\tudiCurrentLevel := udiTmp - 1;\n\tELSE\n\t\t(* In case the stSubModules structure of this module is invalid, create an error and stop *)\n\t\tIF(pstCurrent^.iq_stExt.dwSubModulesItf = 0) THEN\n\t\t\tstPointerException.sMsg:=\t\t\t\t\t\t'SR_VisControl: dwSubModuleInterfaces of module was 0';\n\t\tEND_IF\n\t\tIF (pstCurrent^.iq_stExt.pdwSubModulesAddItf = 0 AND pstCurrent^.iq_stExt.dwControlModulesItf = 0) THEN\n\t\t\tstPointerException.sMsg:=\t\t\t\t\t\t'SR_VisControl: pdwSubModuleAddInterfaces of module was 0';\n\t\tEND_IF\n\t\t(*Set an error if there is no sub module (control module or equipment module)*)\n\t\tIF( (pstCurrent^.iq_stExt.dwSubModulesItf = 0 )\n\t\t\tOR (pstCurrent^.iq_stExt.pdwSubModulesAddItf = 0) ) AND pstCurrent^.iq_stExt.dwControlModulesItf = 0 THEN\n\t\t\t(* Error, the structures are not set in the expected way *)\n\t\t\n\t\t\tstPointerException.etDiag\t\t\t:= GD.ET_Diag.UnexpectedProgramBehavior;\n\t\t\tstPointerException.udiDiagExt\t\t:= ET_DiagExt.InvalidPointer;\n\t\t\tstPointerException.sDiagExt\t\t\t:= FC_EtDiagExtToString(stPointerException.udiDiagExt);\n//\t\t\tstPointerException.sMsg\t\t\t\t:= '';\n\t\t\tstPointerException.udiModuleId\t\t:= pstCurrent^.i_udiModuleId;\n\t\t\tstPointerException.sModuleName\t\t:= pstCurrent^.i_sModuleName;\n\t\t\tstPointerException.etSource\t\t\t:= TPL.ET_ExceptionSource.Vis;\n\t\t\tstPointerException.timDelayTime\t\t:= T#0MS;\n\t\t\tstPointerException.wHmiAttributes\t:= 0;\n\t\t\tstPointerException.xAutoQuit\t\t:= FALSE;\n\t\t\tstPointerException.stReaction.axReaction[TPL.ET_Reaction.AsyncStop] := TRUE;\n\n\t\t\tTPL.FC_SetException(i_xExceptionActive\t:= TRUE,\n\t\t\t\t\t\t\t\tiq_stException\t\t:= stPointerException,\n\t\t\t\t\t\t\t\tiq_stExceptionList\t:= G_stExceptionList,\n\t\t\t\t\t\t\t\tiq_stLogDataList\t:= G_stLogDataList);\n\t\t\t\t\t\t\t\t\n\t\t\txPointerExceptionActive := TRUE;\n\t\t\tRETURN;\n\t\tEND_IF\n\t\t\n\t\tpstCurrentParent := pstCurrent;\n\t\t(* Only navigate to existing equipment modules *)\n\t\tIF pstCurrentParent^.iq_stExt.udiNumberOfSubModules >= audiHierarchy[udiTmp] THEN\n\t\t\tpstCurrent := pstCurrent^.iq_stExt.dwSubModulesItf\n\t\t\t\t+ UDINT_TO_DWORD((audiHierarchy[udiTmp] - 1) * SIZEOF(vpq_stCurrentModuleStandardInterface));\n\t\t\tIF(udiTmp = 2) THEN\n\t\t\t\tudiCurrentLevel3Size := pstCurrent^.iq_stExt.udiNumberOfSubModules;\n\t\t\t\tpstCurrentFirstLevel3Module := pstCurrent^.iq_stExt.dwSubModulesItf;\n\t\t\tEND_IF\n\t\tEND_IF\n\t\t(*Initialize pointer for level 2*)\n\t\tIF udiTmp = 2 THEN\n\t\t\tpstCurrentLevel2 := pstCurrent;\n\t\tEND_IF\n\n\tEND_IF\nEND_FOR\n\n(*Set pointer to the current module interface*)\nIF pstCurrentParent = 0  THEN\n\tpstCurrentControlModuleStandardInterface \t:= pstCurrent^.iq_stExt.dwControlModulesItf;\n\tudiCurrentNumberOfControlModules \t\t\t:= pstCurrent^.iq_stExt.udiNumberOfControlModules;\nELSE\n\tpstCurrentControlModuleStandardInterface \t:= pstCurrentParent^.iq_stExt.dwControlModulesItf;\n\tudiCurrentNumberOfControlModules \t\t\t:= pstCurrentParent^.iq_stExt.udiNumberOfControlModules;\nEND_IF\nIF pstCurrentLevel2 <> 0 THEN\n\tudiNumberOfControlModulesLevel2:= pstCurrentLevel2^.iq_stExt.udiNumberOfControlModules;\nELSE\n\tudiNumberOfControlModulesLevel2:= 0;\nEND_IF","LineInfoPersistence":"(string)78dcf48d-0499-4891-a085-c9cbc329958e_Impl_LineIds"}}}},"UniqueIdGenerator":"(string)166"}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","8ac092e5":"{8ac092e5-3128-4e26-9e7e-11016c6684f2}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}