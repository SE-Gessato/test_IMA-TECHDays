{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)d779f65c-4254-43c3-823d-07550819ddff","ParentGuid":"(Guid)851aa138-17ab-4e51-acd6-2ee6ffc83b4a","Name":"(string)WriteDiagDataToFile","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)TPL.FC_CanContinueWriting(iq_stCanContinueWriting := THIS^.iq_stComStructure.iq_stCanContinueWriting); (* loop as long as we can continue to write *)\n\nWHILE (THIS^.iq_stComStructure.iq_stCanContinueWriting.xCanContinue) DO\n\t\n\tCASE THIS^.diCmdExecState OF\n\t\t1:\n\t\t\t(* start writing *)\n\t\t\tTHIS^.fbTreeWriter.TreeStart(\ti_sName\t\t\t\t\t:= THIS^.c_sName, \n\t\t\t\t\t\t\t\t\t\t\ti_sTypeName\t\t\t\t:= THIS^.c_sTypeName, \n\t\t\t\t\t\t\t\t\t\t\ti_sTitleEnglish\t\t\t:= 'Example data as tree', \n\t\t\t\t\t\t\t\t\t\t\ti_sTitleGerman\t\t\t:= 'Beispieldaten als Baum', \n\t\t\t\t\t\t\t\t\t\t\ti_uiPrintRank\t\t\t:= 14, \n\t\t\t\t\t\t\t\t\t\t\ti_sEmptyListTextEnglish\t:= 'No data available to show', \n\t\t\t\t\t\t\t\t\t\t\ti_sEmptyListTextGerman\t:= 'Keine Daten zum Anzeigen vorhanden',\n\t\t\t\t\t\t\t\t\t\t\tq_etDiag\t\t\t\t=> THIS^.etDiag,\n\t\t\t\t\t\t\t\t\t\t\tq_etDiagExt\t\t\t\t=> THIS^.etDiagExtTPL);\n\t\t\t\t\t\t\t\t\t\n\t\t\tIF THIS^.etDiag <> GD.ET_Diag.Ok THEN\n\t\t\t\tExceptionDuringWriting();\n\t\t\t\tEXIT;\n\t\t\tEND_IF\n\n\t\t\tFOR THIS^.uiLevelCounter := 1 TO THIS^.c_uiMaxLevel DO\n\t\t\t\tTHIS^.auiNodeCounter[uiLevelCounter] := 1;\n\t\t\tEND_FOR\n\n\t\t\tTHIS^.uiNodeId := 1;\n\n\t\t\tTHIS^.lrSumNodes := ((1 - EXPT(THIS^.uiMaxNodePerLevel, THIS^.c_uiMaxLevel + 1)) / (1 - THIS^.uiMaxNodePerLevel));\n\n\t\t\tTHIS^.uiLevelCounter := 1; (* start loop at index 1 *)\n\n\t\t\tTHIS^.diCmdExecState := THIS^.diCmdExecState + 1;\n\t\t2:\n\t\t\tIF (THIS^.auiNodeCounter[THIS^.uiLevelCounter] <= THIS^.uiMaxNodePerLevel) THEN\n\t\t\t\t(* don't need to go up again, can create more nodes on this level *)\n\n\t\t\t\t(* create another subnode and go down *)\n\t\t\t\t(* create another node *)\n\t\t\t\tTHIS^.uiNodeId := 0;\n\t\t\t\tTHIS^.auiNodeCounter[THIS^.uiLevelCounter] := THIS^.auiNodeCounter[THIS^.uiLevelCounter] + 1;\n\t\t\t\t\n\t\t\t\tFOR THIS^.uiTmp := 1 TO THIS^.uiLevelCounter DO\n\t\t\t\t\tTHIS^.uiNodeId := THIS^.uiNodeId * 100 + (THIS^.auiNodeCounter[THIS^.uiTmp] - 1);\n\t\t\t\tEND_FOR\n\t\t\t\t\n\t\t\t\tTHIS^.fbTreeWriter.NodeStart(\ti_sName\t\t:= CONCAT('Knoten_', UINT_TO_STRING(uiNodeId)),\n\t\t\t\t\t\t\t\t\t\t\t\tq_etDiag\t=> THIS^.etDiag,\n\t\t\t\t\t\t\t\t\t\t\t\tq_etDiagExt\t=> THIS^.etDiagExtTPL);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tIF THIS^.etDiag <> GD.ET_Diag.Ok THEN\n\t\t\t\t\tExceptionDuringWriting();\n\t\t\t\t\tEXIT;\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\t\tTHIS^.fbTreeWriter.Parameter(\ti_sName\t\t:= 'something', \n\t\t\t\t\t\t\t\t\t\t\t\t\ti_sValue\t:= LREAL_TO_STRING(UINT_TO_LREAL(uiLevelCounter * auiNodeCounter[uiLevelCounter]) / UINT_TO_LREAL(uiNodeId)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tq_etDiag\t=> THIS^.etDiag,\n\t\t\t\t\t\t\t\t\t\t\t\t\tq_etDiagExt\t=> THIS^.etDiagExtTPL);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tIF THIS^.etDiag <> GD.ET_Diag.Ok THEN\n\t\t\t\t\t\tExceptionDuringWriting();\n\t\t\t\t\t\tEXIT;\n\t\t\t\t\tEND_IF\n\n\t\t\t\tTHIS^.uiLevelCounter := THIS^.uiLevelCounter + 1;\n\n\t\t\t\tIF (THIS^.uiLevelCounter > THIS^.c_uiMaxLevel) THEN\n\t\t\t\t\t(* go up again *)\n\t\t\t\t\tTHIS^.fbTreeWriter.NodeEnd(\tq_etDiag\t=> THIS^.etDiag,\n\t\t\t\t\t\t\t\t\t\t\t\tq_etDiagExt\t=> THIS^.etDiagExtTPL);\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tIF THIS^.etDiag <> GD.ET_Diag.Ok THEN\n\t\t\t\t\t\tExceptionDuringWriting();\n\t\t\t\t\t\tEXIT;\n\t\t\t\t\tEND_IF\n\n\t\t\t\t\tTHIS^.uiLevelCounter := THIS^.uiLevelCounter - 1;\n\t\t\t\tEND_IF\n\t\t\tELSE\n\t\t\t\t(* go up again *)\n\t\t\t\tTHIS^.fbTreeWriter.NodeEnd(\tq_etDiag\t=> THIS^.etDiag,\n\t\t\t\t\t\t\t\t\t\t\tq_etDiagExt\t=> THIS^.etDiagExtTPL);\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tIF THIS^.etDiag <> GD.ET_Diag.Ok THEN\n\t\t\t\t\tExceptionDuringWriting();\n\t\t\t\t\tEXIT;\n\t\t\t\tEND_IF\n\n\t\t\t\tTHIS^.auiNodeCounter[THIS^.uiLevelCounter] := 1; (* reset node counter of level *)\n\n\t\t\t\tTHIS^.uiLevelCounter := THIS^.uiLevelCounter - 1;\n\t\t\t\tIF (THIS^.uiLevelCounter <= 1) THEN\n\t\t\t\t\t(* loop over all nodes and levels done *)\n\t\t\t\t\tTHIS^.diCmdExecState := THIS^.diCmdExecState + 1;\n\t\t\t\tEND_IF\n\t\t\tEND_IF\n\n\t\t\tTHIS^.iq_stComStructure.q_lrProgress := UINT_TO_LREAL(THIS^.auiNodeCounter[1]) * LREAL#100.0 / MAX(THIS^.lrSumNodes,0.0001);\n\n\t\t3:\n\t\t\tTHIS^.fbTreeWriter.TreeEnd(\tq_etDiag\t=> THIS^.etDiag,\n\t\t\t\t\t\t\t\t\t\tq_etDiagExt\t=> THIS^.etDiagExtTPL);\t\n\t\t\t\t\t\t\t\t\t\n\t\t\tIF THIS^.etDiag <> GD.ET_Diag.Ok THEN\n\t\t\t\tExceptionDuringWriting();\n\t\t\t\tEXIT;\n\t\t\tEND_IF\n\t\t\t(* done *)\n\t\t\t\n\t\t\t(* signal command execution *)\n\t\t\tTHIS^.iq_stComStructure.iq_diCmd := 0;\n\t\t\t\n\t\t\tSetDiagOutputs(\ti_etDiag\t:= GD.ET_Diag.Ok,\n\t\t\t\t\t\t\ti_etDiagExt\t:= ET_DiagExt.DataSuccessfullyWritten,\n\t\t\t\t\t\t\ti_sMsg\t\t:= '');\t\t\n\t\t\t\n\t\t\tTHIS^.diCmdExecState := 0;\n\t\t\tEXIT; (* exit the while loop *)\n\tEND_CASE\n\t\n\t(* check again whether we can continue writing *)\n\tTPL.FC_CanContinueWriting(iq_stCanContinueWriting := THIS^.iq_stComStructure.iq_stCanContinueWriting);\nEND_WHILE","LineInfoPersistence":"(string)d779f65c-4254-43c3-823d-07550819ddff_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){attribute 'hide'}\nMETHOD WriteDiagDataToFile : BOOL\nVAR_INPUT\nEND_VAR\n","LineInfoPersistence":"(string)d779f65c-4254-43c3-823d-07550819ddff_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}