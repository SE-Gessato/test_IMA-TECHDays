{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)1a034643-a971-4ebb-a9e0-a35821b4c802","ParentGuid":"(Guid)abacf420-6692-4371-b169-bbd6e5873750","Name":"(string)Homing_Action","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)8ac092e5-3128-4e26-9e7e-11016c6684f2","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"8ac092e5","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)(* Start application code *)\nIF(xStartFlag AND (iq_stExampleLeafModuleItf.q_etState = ET_ExampleLeafModuleState.HomingWaitForStart OR iq_stExampleLeafModuleItf.q_etState = ET_ExampleLeafModuleState.HomingDone)) THEN\n\txHomingException := FALSE;\n\tiq_stExampleLeafModuleItf.q_etState := ET_ExampleLeafModuleState.HomingExecuting;\nEND_IF\n\nIF(iq_stExampleLeafModuleItf.q_etState = ET_ExampleLeafModuleState.HomingExecuting) THEN\n\t(* Emulating an action in the process that takes some time *)\n\tudiDoSomethingCounter := udiDoSomethingCounter + 1;\n\tIF(udiDoSomethingCounter > c_udiDoSomeThingLevel) THEN\n\t\t(* Homing done *)\n\t\tiq_stExampleLeafModuleItf.q_xValue := TRUE;\n\n\t\t(* Sometimes creates an error *)\n\t\tIF(iq_stExampleLeafModuleItf.i_xEnableRandomExceptionTrigger) THEN\n\t\t\tIF(xRandomExceptionTrigger) THEN\n\t\t\t\txHomingException := TRUE;\n\t\t\tEND_IF\n\t\t\txRandomExceptionTrigger := NOT xRandomExceptionTrigger;\n\t\tEND_IF\n\n\t\tiq_stExampleLeafModuleItf.q_etState := ET_ExampleLeafModuleState.HomingDone;\n\tEND_IF\nEND_IF\n\nIF xHomingException THEN\n\tReportException(iq_stException := stExceptionHoming);\nELSE\n\tCancelException(iq_stException := stExceptionHoming);\nEND_IF\n\nIF(iq_stExampleLeafModuleItf.q_etState <> ET_ExampleLeafModuleState.HomingExecuting) THEN\n\t(* If homing is not running, allow exit of homing by xHomingEnable = FALSE *)\n\tIF(NOT xHomingEnable) THEN\n\t\txHomingActive := FALSE;\n\tEND_IF\nEND_IF\n(* End application code *)","LineInfoPersistence":"(string)1a034643-a971-4ebb-a9e0-a35821b4c802_Impl_LineIds"}}}},"UniqueIdGenerator":"(string)87"}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","8ac092e5":"{8ac092e5-3128-4e26-9e7e-11016c6684f2}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}