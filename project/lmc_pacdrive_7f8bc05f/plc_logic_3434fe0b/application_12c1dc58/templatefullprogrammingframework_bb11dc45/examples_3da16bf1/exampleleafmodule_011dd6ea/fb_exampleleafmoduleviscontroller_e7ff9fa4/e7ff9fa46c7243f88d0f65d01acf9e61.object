{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)e7ff9fa4-6c72-43f8-8d0f-65d01acf9e61","ParentGuid":"(Guid)12c1dc58-f677-4c4a-94db-2fd2a19f6f97","Name":"(string)FB_ExampleLeafModuleVisController","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)011dd6ea-c745-44c8-9589-274bb39a0b35"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)q_udiSetAsCurrentModule \t:= 0;\nq_udiSetAsJogTarget\t\t\t:= 0;\n\n(*********************************************************************)\n\nIF i_xEnable AND NOT xEnableFlag THEN\n\txEnableFlag := TRUE;\n\t\n\tq_xActive\t:= TRUE;\t\n\t\n\tq_etDiag\t:= GD.ET_Diag.Ok;\n\tq_etDiagExt := ET_DiagExtExampleLeafModule.Initializing;\n\tq_sMsg\t\t:= '';\n\t\n\t\n\t\t\n\tudiCountExampleLeafModules := TPL.FC_GetAllModulesOfType(\ti_pstMachineStandardItf\t:= i_pstMachineStandardItf,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti_dwWantedType\t\t\t:= ET_ModuleType.ExampleLeafModule,  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti_pdwResultSet\t\t\t:= ADR(apExampleLeafModuleInterface), \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti_udiResultSetSize\t\t:= c_udiMaxExampleLeafModules);\n\tFOR udiTmp := 1 TO udiCountExampleLeafModules DO\n\t\t(* module version check *)\n\t\tIF(apExampleLeafModuleInterface[udiTmp]^.q_udiModuleVersion = 1) THEN\n\t\t\taudiExampleLeafModuleId[udiTmp] := apExampleLeafModuleInterface[udiTmp]^.i_udiModuleId;\n\t\t\tasExampleLeafModuleName[udiTmp] := apExampleLeafModuleInterface[udiTmp]^.i_sModuleName;\n\t\tEND_IF\n\tEND_FOR\n\t\n\tq_xReady\t:= TRUE;\n\t\n\tq_etDiag\t:= GD.ET_Diag.Ok;\n\tq_etDiagExt\t:= ET_DiagExtExampleLeafModule.Working;\n\tq_sMsg\t\t:= '';\n\t\nELSIF NOT i_xEnable AND xEnableFlag THEN\n\txEnableFlag := FALSE;\n\t\n\tq_xActive\t\t\t\t:= FALSE;\t\n\tq_xReady\t\t\t\t:= FALSE;\n\tq_etDiag\t\t\t\t:= GD.ET_Diag.Ok;\n\tq_etDiagExt\t\t\t\t:= ET_DiagExtExampleLeafModule.Disabled;\n\tq_sMsg\t\t\t\t\t:= '';\n\tq_udiSetAsCurrentModule\t:= 0;\t\t\n\tq_udiSetAsJogTarget\t\t:= 0;\t\t\nEND_IF\n\nIF i_xEnable THEN\n\tq_udiSetAsCurrentModule := udiSetAsCurrentModule;\n\tudiSetAsCurrentModule := 0;\nEND_IF\n\n\n(*********************************************************************)\n\n\nIF i_xEnable THEN\n\tIF i_pstCurrentStandardItf = 0 THEN\n\t\tq_xReady := FALSE;\n\t\tq_etDiag := GD.ET_Diag.InputParameterInvalid;\n\t\tq_etDiagExt := ET_DiagExtExampleLeafModule.CurrentStandardItfInvalidPointer;\n\t\tq_sMsg := '';\n\tELSIF i_dwCurrentAddItf = 0 THEN\n\t\tq_xReady := FALSE;\n\t\tq_etDiag := GD.ET_Diag.InputParameterInvalid;\n\t\tq_etDiagExt := ET_DiagExtExampleLeafModule.CurrentAddItfInvalidPointer;\n\t\tq_sMsg := '';\n\tELSE\n\t\tq_xReady\t:= TRUE;\n\t\n\t\tq_etDiag\t:= GD.ET_Diag.Ok;\n\t\tq_etDiagExt\t:= ET_DiagExtExampleLeafModule.Working;\n\t\tq_sMsg\t\t:= '';\n\t\t\n\t\tIF (i_pstCurrentStandardItf^.q_dwModuleType = UDINT_TO_DWORD(ET_ModuleType.ExampleLeafModule)) THEN\n\t\t\t(* Module version check *)\n\t\t\tIF(i_pstCurrentStandardItf^.q_udiModuleVersion = 1) THEN\n\t\t\t\tpstCurrentExampleLeafModuleInterface := i_dwCurrentAddItf;\n\t\t\t\txCurrentIsOfMyType := TRUE;\n\t\t\tEND_IF\n\t\tELSE\n\t\t\tpstCurrentExampleLeafModuleInterface := 0;\n\t\t\txCurrentIsOfMyType := FALSE;\n\t\tEND_IF\t\n\t\n\t\tIF(xCurrentIsOfMyType) THEN\n\t\t\t(* Execute changes requested by user first *)\n\t\t\tIF(NOT xInitUserInputs) THEN\n\t\t\t\txInitUserInputs := TRUE;\n\t\t\t\t(* Ignore values of variables now *)\n\t\t\tELSE\n\t\t\t\t(* Detect user changes *)\n\t\t\t\tIF stCurrentExampleLeafModuleInterface.i_lrPosMax <> lrPosMax THEN\n\t\t\t\t\tpstCurrentExampleLeafModuleInterface^.i_lrPosMax := stCurrentExampleLeafModuleInterface.i_lrPosMax;\n\t\t\t\tEND_IF\n\t\n\t\t\t\t(* ... *)\n\t\t\tEND_IF\n\t\t\tstCurrentExampleLeafModuleInterface := pstCurrentExampleLeafModuleInterface^;\n\t\n\t\tELSE\n\t\t\t;\n\t\t\t(* Reset other flags *)\n\t\tEND_IF\n\tEND_IF\nELSE\n\txCurrentIsOfMyType := FALSE;\nEND_IF","LineInfoPersistence":"(string)e7ff9fa4-6c72-43f8-8d0f-65d01acf9e61_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_ExampleLeafModuleVisController\n\nVAR_INPUT\n\ti_xEnable\t\t\t\t\t\t\t\t: BOOL;\n\ti_pstMachineStandardItf\t\t\t\t\t: POINTER TO TPL.ST_StandardModuleInterface;\n\ti_pstCurrentStandardItf\t\t\t\t\t: POINTER TO TPL.ST_StandardModuleInterface;\n\ti_dwCurrentAddItf\t\t\t\t\t\t: DWORD;\n\ti_xUpdateData\t\t\t\t\t\t\t: BOOL; (* Signals the selection of another module *)\n\ti_udiCurrentJogTarget\t\t\t\t\t: UDINT;\nEND_VAR\n\nVAR_IN_OUT\n\tiq_stExceptionList\t\t\t\t: TPL.ST_ExceptionList;\n\tiq_stLogDataList\t   \t\t\t: TPL.ST_LogDataList;\nEND_VAR\n\nVAR_OUTPUT\n\tq_xActive\t\t\t\t\t\t\t\t: BOOL;\n\tq_xReady\t\t\t\t\t\t\t\t: BOOL;\n\tq_etDiag\t\t\t\t\t\t\t\t: GD.ET_Diag := GD.ET_Diag.Ok;\n\tq_etDiagExt\t\t\t\t\t\t\t\t: ET_DiagExtExampleLeafModule := ET_DiagExtExampleLeafModule.Disabled;\n\tq_sMsg\t\t\t\t\t\t\t\t\t: STRING[80] := '';\n\tq_udiSetAsCurrentModule\t\t\t\t\t: UDINT; (* A moduleID, if <> 0, it is set as the current module *)\n\tq_udiSetAsJogTarget\t\t\t\t\t\t: UDINT;\nEND_VAR\n\nVAR\n\txCurrentIsOfMyType\t\t\t\t\t\t: BOOL;\n\tpstCurrentExampleLeafModuleInterface\t: POINTER TO ST_ExampleLeafModuleInterface;\n\tstCurrentExampleLeafModuleInterface\t\t: ST_ExampleLeafModuleInterface;\n\tiPaneSelect\t\t\t\t\t\t\t\t: INT := 1; (* Variable for selecting the active pane *)\n\n\t(* Variables to detect user changes in the vis *)\n\txInitUserInputs\t\t\t\t\t\t\t: BOOL;\n\n\t(* list of all example leaf modules in the machine *)\n\taudiExampleLeafModuleId\t\t\t\t\t: ARRAY[1..c_udiMaxExampleLeafModules] OF UDINT; (* if <> 0, module exists *)\n\tasExampleLeafModuleName\t\t\t\t\t: ARRAY[1..c_udiMaxExampleLeafModules] OF STRING[80]; (* if <> 0, module exists *)\n\tudiCountExampleLeafModules\t\t\t\t: UDINT;\n\tudiSetAsCurrentModule\t\t\t\t\t: UDINT;\n\n\t(* temporary variable, not to be used after init *)\n\tapExampleLeafModuleInterface\t\t\t: ARRAY[1..c_udiMaxExampleLeafModules] OF POINTER TO TPL.ST_StandardModuleInterface;\n\tudiTmp\t\t\t\t\t\t\t\t\t: UDINT;\n\txEnableFlag\t\t\t\t\t\t\t\t: BOOL;\n\n\t(* Variables to detect user changes in the vis *)\n\tlrPosMax\t\t\t\t\t\t\t\t: LREAL;\nEND_VAR\n\nVAR CONSTANT\n\tc_udiMaxExampleLeafModules : UDINT := 10;\nEND_VAR\n","LineInfoPersistence":"(string)e7ff9fa4-6c72-43f8-8d0f-65d01acf9e61_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)285","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}